<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="8" total="14" passed="5" failed="1" skipped="0">
  <reporter-output>
    <line>
      <![CDATA[Extent Report Directory/home/ameur/workspace_qaway/automation-framework-qaway-final-test/target/surefire-reports/html]]>
    </line>
  </reporter-output>
  <suite started-at="2023-01-14T14:53:20Z" name="Command line suite" finished-at="2023-01-14T14:53:58Z" duration-ms="37776">
    <groups>
    </groups>
    <test started-at="2023-01-14T14:53:20Z" name="Command line test" finished-at="2023-01-14T14:53:58Z" duration-ms="37776">
      <class name="org.saucedemo.TestLogin">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:51Z" name="setUp" finished-at="2023-01-14T14:53:53Z" duration-ms="2235" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:53Z" name="startExtent" finished-at="2023-01-14T14:53:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestLogin.loginAttemptWithoutPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="loginAttemptWithoutPassword()[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:53Z" name="loginAttemptWithoutPassword" finished-at="2023-01-14T14:53:54Z" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAttemptWithoutPassword -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:54Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:54Z" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginAttemptWithoutPassword status=SUCCESS method=TestLogin.loginAttemptWithoutPassword()[pri:0, instance:org.saucedemo.TestLogin@146dfe6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:54Z" name="setUp" finished-at="2023-01-14T14:53:57Z" duration-ms="2961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:57Z" name="startExtent" finished-at="2023-01-14T14:53:57Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestLogin.loginAttemptWithoutUsername()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="loginAttemptWithoutUsername()[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:57Z" name="loginAttemptWithoutUsername" finished-at="2023-01-14T14:53:57Z" duration-ms="530" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAttemptWithoutUsername -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestLogin@146dfe6]" started-at="2023-01-14T14:53:57Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:58Z" duration-ms="226" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginAttemptWithoutUsername status=SUCCESS method=TestLogin.loginAttemptWithoutUsername()[pri:0, instance:org.saucedemo.TestLogin@146dfe6] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- org.saucedemo.TestLogin -->
      <class name="org.saucedemo.TestPurchase">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestPurchase@74589991]" started-at="2023-01-14T14:53:48Z" name="setUp" finished-at="2023-01-14T14:53:50Z" duration-ms="2351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestPurchase@74589991]" started-at="2023-01-14T14:53:50Z" name="startExtent" finished-at="2023-01-14T14:53:50Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestPurchase.addItemToCard()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="addItemToCard()[pri:0, instance:org.saucedemo.TestPurchase@74589991]" started-at="2023-01-14T14:53:50Z" name="addItemToCard" finished-at="2023-01-14T14:53:51Z" duration-ms="463" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addItemToCard -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestPurchase@74589991]" started-at="2023-01-14T14:53:51Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:51Z" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=addItemToCard status=SUCCESS method=TestPurchase.addItemToCard()[pri:0, instance:org.saucedemo.TestPurchase@74589991] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- org.saucedemo.TestPurchase -->
      <class name="org.saucedemo.TestMenu">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestMenu@78641d23]" started-at="2023-01-14T14:53:44Z" name="setUp" finished-at="2023-01-14T14:53:47Z" duration-ms="2310" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestMenu@78641d23]" started-at="2023-01-14T14:53:47Z" name="startExtent" finished-at="2023-01-14T14:53:47Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestMenu.about()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="about()[pri:0, instance:org.saucedemo.TestMenu@78641d23]" started-at="2023-01-14T14:53:47Z" name="about" finished-at="2023-01-14T14:53:47Z" duration-ms="547" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertTrue(Assert.java:44)
at org.testng.Assert.assertTrue(Assert.java:54)
at org.saucedemo.TestMenu.about(TestMenu.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:77)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:159)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:99)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:106)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray(ReflectionUtils.java:189)
at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:165)
at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:85)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:115)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:75)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- about -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestMenu@78641d23]" started-at="2023-01-14T14:53:47Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:48Z" duration-ms="420" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=about status=FAILURE method=TestMenu.about()[pri:0, instance:org.saucedemo.TestMenu@78641d23] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- org.saucedemo.TestMenu -->
      <class name="org.saucedemo.TestInitialPage">
        <test-method is-config="true" signature="extentSetup(org.testng.ITestContext)[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:20Z" name="extentSetup" finished-at="2023-01-14T14:53:20Z" duration-ms="97" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@733f1395]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Extent Report Directory/home/ameur/workspace_qaway/automation-framework-qaway-final-test/target/surefire-reports/html]]>
            </line>
          </reporter-output>
        </test-method> <!-- extentSetup -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:20Z" name="setUp" finished-at="2023-01-14T14:53:27Z" duration-ms="7064" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:27Z" name="startExtent" finished-at="2023-01-14T14:53:27Z" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestInitialPage.validateLoginPageElements()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method signature="validateLoginPageElements()[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:27Z" name="validateLoginPageElements" finished-at="2023-01-14T14:53:37Z" duration-ms="10047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateLoginPageElements -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:37Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:39Z" duration-ms="2183" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=validateLoginPageElements status=SUCCESS method=TestInitialPage.validateLoginPageElements()[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
        <test-method is-config="true" signature="generateReport()[pri:0, instance:org.saucedemo.TestInitialPage@5f354bcf]" started-at="2023-01-14T14:53:58Z" name="generateReport" finished-at="2023-01-14T14:53:58Z" duration-ms="20" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateReport -->
      </class> <!-- org.saucedemo.TestInitialPage -->
      <class name="org.saucedemo.TestFilter">
        <test-method is-config="true" signature="setUp()[pri:0, instance:org.saucedemo.TestFilter@3daf7722]" started-at="2023-01-14T14:53:39Z" name="setUp" finished-at="2023-01-14T14:53:42Z" duration-ms="3060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="filterFromLowToHigh()[pri:0, instance:org.saucedemo.TestFilter@3daf7722]" started-at="2023-01-14T14:53:42Z" name="filterFromLowToHigh" finished-at="2023-01-14T14:53:44Z" duration-ms="2021" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- filterFromLowToHigh -->
        <test-method is-config="true" signature="startExtent(java.lang.reflect.Method)[pri:0, instance:org.saucedemo.TestFilter@3daf7722]" started-at="2023-01-14T14:53:42Z" name="startExtent" finished-at="2023-01-14T14:53:42Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void org.saucedemo.TestFilter.filterFromLowToHigh()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startExtent -->
        <test-method is-config="true" signature="afterEachTestMethod(org.testng.ITestResult)[pri:0, instance:org.saucedemo.TestFilter@3daf7722]" started-at="2023-01-14T14:53:44Z" name="afterEachTestMethod" finished-at="2023-01-14T14:53:44Z" duration-ms="238" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=filterFromLowToHigh status=SUCCESS method=TestFilter.filterFromLowToHigh()[pri:0, instance:org.saucedemo.TestFilter@3daf7722] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEachTestMethod -->
      </class> <!-- org.saucedemo.TestFilter -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
